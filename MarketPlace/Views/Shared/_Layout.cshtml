<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title Campus Connect</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/lib/bootstrap/css/bootstrap.min.css">
    <!-- Layout CSS -->
    <link rel="stylesheet" href="/style/Layout.css" />
    <link rel="stylesheet" href="/style/Home_Style.css" />
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/lib/font-awesome/css/all.min.css">
    <!--Icons-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <style>
        main{
            overflow-x: hidden;
            max-width: 100vw;
        }
        /* Increase navbar height */
        .navbar {
            height: 90px;
            background-color: #003D32 !important;
            margin-bottom: 1rem;
        }

        .navbar-nav .nav-link,
        .navbar-brand {
            color: F5F6F6 !important;
        }

        .user-profile-dropdown i {
            font-size: 1.5em;
            color: #F5F6F6;
        }

        /* Update search bar styles to match theme */
        .form-control {
            border: 1px solid rgba(255,255,255,0.2);
            background-color: #F5F6F6;
            color: black;
        }

        .form-control::placeholder {
            color: black;
        }
        <>
    .pill {
        border-radius: 1.5rem;
        padding: 0.25rem 1rem;
        margin-right: 0.5rem;
    }
    .custom-container {
        max-width: 95%;
        margin: 0 auto; /* Center the container */
    }
    .btn-warning {
        background-color: #FFD814;
        border-color: #FFD814;
        color: #000;
    }
    .btn-success{
        background-color: #003D32;
        border-color: #003D32;
        color: #F5F6F6;
    }

    .btn-warning:hover {
        background-color: #F7CA00;
        border-color: #F7CA00;
        color: #000;
    }

    .btn-warning.active {
        background-color: transparent !important;
        border: 0.5px solid #FFD814 !important;
        color: #FFD814 !important;
    }

    .pill {
        border-radius: 1.5rem;
        padding: 0.25rem 1rem;
        margin-right: 0.5rem;
    }

    .pill.active {
        box-shadow: 0 0 0 2px #FFD814;
    }
    .icon-container {
        background-color: #A9176F;
        padding: 6px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 8px;
        transition: opacity 0.2s ease;
    }

    .icon-container:hover {
        opacity: 0.8;
        cursor: pointer;
    }

    .icon-container i {
        color: black;
    }
    .message-container {
            max-width: 400px;
            animation: slideIn 0.3s ease-out;
        }

        .alert {
            border: none;
            border-radius: 10px;
            padding: 1rem;
        }

        @@keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        .message-container {
            max-width: 400px;
            width: 90%;
            margin-top: 1rem;
            animation: slideDown 0.3s ease-out;
        }

        .alert {
            border: none;
            border-radius: 10px;
            padding: 1rem;
        }

        @@keyframes slideDown {
            from {
                transform: translateY(-100%) translateX(-50%);
                opacity: 0;
            }
            to {
                transform: translateY(0) translateX(-50%);
                opacity: 1;
            }
        }
    </style>
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark">
            <!-- Navbar Brand and Search -->
            <div class="container-fluid d-flex align-items-center" style="padding-left:6rem">
                <a asp-action="Index" asp-controller="Home" class="text-decoration-none">
                    <h1 class="navbar-brand">Campus Connect</h1>
                </a>

                <!-- Search Bar -->
                <div class="row height d-flex justify-content-center align-items-center flex-grow-1 ms-3 me-4">
                    <form class="d-flex w-100" id="search-bar">
                        <i class="fa fa-search me-2"></i>
                        <input type="text" class="form-control form-input w-100" placeholder="Search anything...">
                    </form>
                </div>

                <!-- Hamburger Menu Button -->
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="NavbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Collapsible Navbar Content -->
                <div id="navbarNav" class="collapse navbar-collapse">
                    <ul class="navbar-nav ms-auto me-4 ms-2">
                        <li class="nav-item"><a class="nav-link" href="#">Browse</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Categories</a></li>
                        @if(User.Identity.IsAuthenticated){
                            <div class="d-flex align-items-center">
                            <div class="icon-container">
                                <i class="bi bi-chat-dots-fill"></i>
                            </div>
                            <div class="icon-container dropdown">
                                <a href="#" class="text-decoration-none position-relative" id="notificationDropdown" data-bs-toggle="dropdown" arial-expanded="false">
                                    <i class="bi bi-bell-fill"></i>
                                    @if(ViewBag.UnreadNotifications > 0)
                                    {
                                        <span class="badge bg-danger rounded-circle position-absolute top-0 start-100 translate-middle">
                                            @ViewBag.UnreadNotificationCount
                                            <span class="visually-hidden"> unread messages</span>
                                        </span>
                                    }
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationDropdown" style="width: 300px;">
                                    <li class="dropdown-header">Notifications</li>
                                    @if (ViewBag.Notifications != null && ViewBag.Notifications.Count > 0)
                                    {
                                        foreach (var notification in ViewBag.Notifications)
                                        {
                                            <li>
                                                <a class="dropdown-item" href="@notification.Link">
                                                    @if (!notification.IsRead)
                                                    {
                                                        <span class="badge bg-warning text-dark me-2">New</span>
                                                    }
                                                    @notification.Message
                                                </a>
                                            </li>
                                        }
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <a class="dropdown-item text-center" href="@Url.Action("Notifications", "Account")">
                                                View All Notifications
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="dropdown-item text-muted">No new notifications</li>
                                    }
                                </ul>
                            </div>
                        </div>
                        }
                        
                    </ul>

                    <!-- Right Side: User Profile with Dropdown -->
                    <div class="d-flex align-items-center ms-9">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="d-flex align-items-center">
                                
                                <!-- User Profile Dropdown -->
                                <div class="dropdown">
                                    <div class="d-flex align-items-center" 
                                        data-bs-toggle="dropdown" 
                                        role="button" 
                                        aria-expanded="false">
                                        @await Component.InvokeAsync("UserProfile")
                                        <i class="bi bi-chevron-down ms-2 text-white"></i>
                                    </div>
                                    
                                    <!-- Dropdown Menu -->
                                    <ul class="dropdown-menu dropdown-menu-end shadow border-0">
                                        <li>
                                            <a class="dropdown-item px-3 py-2" asp-controller="User" asp-action="Profile">
                                                <i class="bi bi-person me-2"></i>Profile
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item px-3 py-2" asp-controller="Account" asp-action="Settings">
                                                <i class="bi bi-gear me-2"></i>Settings
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item px-3 py-2" asp-controller="ProductManager" asp-action="ManageListings">
                                                <i class="bi bi-box me-2"></i>My Listings
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <form asp-controller="Account" asp-action="Logout" method="post">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="dropdown-item px-3 py-2 text-danger">
                                                    <i class="bi bi-box-arrow-right me-2"></i>Logout
                                                </button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        }
                        else
                        {
                            <form asp-controller="Account" asp-action="Login" method="get" class="d-flex align-items-center">
                                <button type="submit" class="btn btn-warning">
                                    <i class="me-2"></i>Login
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <main class=" container-fluid">
        @RenderBody()
    </main>

    <footer>
        @* <h1 class="float-end">Campus Connect</h1> *@
    </footer>

    <!-- Bootstrap JS -->
    <script src="/lib/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Custom Scripts -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const buttonContainers = document.querySelectorAll('[data-button-container]');
        
        buttonContainers.forEach(container => {
            const buttons = container.querySelectorAll('a');
            
            buttons.forEach(button => {
                button.addEventListener('click', function() {
                    // Remove active class from all buttons in container
                    buttons.forEach(btn => btn.classList.remove('active'));
                    
                    // Add active class to clicked button
                    button.classList.add('active');
                });
            });
        });
    });
    </script>
    <script>
    // Add rotation animation to chevron icons
    document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(button => {
        button.addEventListener('click', () => {
            const icon = button.querySelector('.bi-chevron-down');
            icon.style.transform = icon.style.transform === 'rotate(180deg)' ? 'rotate(0deg)' : 'rotate(180deg)';
        });
    });
    </script>
        <script>
        // Auto-dismiss alerts after 5 seconds
        setTimeout(() => {
            document.querySelectorAll('.alert').forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 10000);
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const notificationIcon = document.getElementById('notificationDropdown');
            console.log(notificationIcon)
            notificationIcon.addEventListener('click', function() {
                fetchNotifications();
            });

            // Function to fetch notifications
            function fetchNotifications() {
                fetch('/Account/TestGetNotifications')
                    .then(response => response.json())
                    .then(data => {
                        // Update notification count badge
                        const badge = notificationIcon.querySelector('.badge');
                        if (data.unreadCount > 0) {
                            if (badge) {
                                badge.textContent = data.unreadCount;
                            } else {
                                const newBadge = document.createElement('span');
                                newBadge.className = 'position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger';
                                newBadge.textContent = data.unreadCount;
                                notificationIcon.appendChild(newBadge);
                            }
                        } else if (badge) {
                            badge.remove();
                        }

                        // Update dropdown menu
                        const dropdownMenu = document.querySelector('.dropdown-menu');
                        dropdownMenu.innerHTML = '<li class="dropdown-header">Notifications</li>';

                        if (data.notifications.length > 0) {
                            data.notifications.forEach(notification => {
                                const item = document.createElement('li');
                                item.innerHTML = `
                                    <a class="dropdown-item" href="${notification.link}">
                                        ${notification.isRead ? '' : '<span class="badge bg-warning text-dark me-2">New</span>'}
                                        ${notification.message}
                                    </a>`;
                                dropdownMenu.appendChild(item);
                            });
                            dropdownMenu.innerHTML += `
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item text-center" href="/Account/GetNotifications">
                                        View All Notifications
                                    </a>
                                </li>`;
                        } else {
                            dropdownMenu.innerHTML += '<li class="dropdown-item text-muted">No new notifications</li>';
                        }
                    })
                    .catch(error => console.error('Error fetching notifications:', error));
            }

            // Fetch notifications every minute
            setInterval(fetchNotifications, 60000);
            fetchNotifications();
        });
    </script>

    <!---Script sections-->
    @RenderSection("Scripts", required: false)

</body>

</html>
